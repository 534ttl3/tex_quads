* tex_quads
I started to developed this program with the idea in mind of creating an animation engine similar to the fantastic [[https://github.com/3b1b/manim][manim]], to put my own spin on mathematical visualization. I am using the [[https://github.com/panda3d/panda3d][panda3d]] engine, which is a game engine developed in C++, with Python bindings. 

So far, this program can do basic things like drawing arrays of vectors, or small animations like this one: 
[[./screenshots/Peek_2019-05-29_22-03.gif]]

It can also convert a string in python to a LaTeX formula to a pdf to an svg file, then reads that in and renders it as polygons (supports right now only very basic shapes, i.e. letters with one hole).

* Notes
** Implement a 'scene2d' type class
- to plot a coordinate system in (and fit inside the viewport)
- properties: 
  - default height and width
  - default anchor point
  - background color
  - white frame
  - function to fit stuff in it
*** Make rectangle class
**** DONE draw a rectangle made of lines
**** DEFERRED Make it automatically encompass things
** MAYBE create shaded triangulated Cone procedurally
(see e.g. https://github.com/intel-isl/Open3D/blob/ebaa197c135c7055710503d47d389526eb7ed580/src/Open3D/Geometry/TriangleMeshFactory.cpp)
*** calculate surface normals manually for the cone (for flat shading)
** Draw 3d arrowheads
*** TODO Shaded
For diffuse shading, my cone geom needs additional normals, wich it doesn't currently have. The p3d egg library contains functions to calculate normals. That could be worth a try. Otherwise, I would have to calculate them manually on the processor.
https://discourse.panda3d.org/t/computing-normals-for-procedural-geometry/12178
Actually, since structures like arrowheads should not be zoomed into anyway, it shoudl be enough to just load them as models with normals already created (in a tool like blender for example).
**** TODO in the Orbiter class, attach a point light to the moving camera
**** import a cube from blender and make it an arrowhead

*** MAYBE Draw a black circle and black dot as part of the Cone tip
*** MAYBE Figure out how to make an object keep facing the camera, keeping it's local origin fixed

** DEFERRED triangulation of latex characters
Probe, at what complexity the p3d triangulation breaks. To decrease the complexity (geometry simplification) and check for intersections of hole polygon with boundary polygon, use the shapely library.

* Installation
- Clone this repository
- Create a =virtualenv= (e.g. named =venv=) with =python3=, (e.g. in your current folder =.=, the project's root folder): 
#+BEGIN_SRC sh
python3 -m venv .
#+END_SRC

- Activate the virtual environment, e.g.
#+BEGIN_SRC sh
source ./bin/activate
#+END_SRC

- install the dependencies listed in =requirements.txt=
#+BEGIN_SRC sh
pip install -r ./requirements.txt
#+END_SRC
