* tex_quads
I started to developed this program with the idea in mind of creating an animation engine similar to the fantastic [[https://github.com/3b1b/manim][manim]], to put my own spin on mathematical visualization. I am using the [[https://github.com/panda3d/panda3d][panda3d]] engine, which is a game engine developed in C++, with Python bindings. 

So far, this program can do basic things like drawing arrays of vectors, or small animations like this one: 
[[./screenshots/Peek_2019-05-29_22-03.gif]]

It can also convert a string in python to a LaTeX formula to a pdf to an svg file, then reads that in and renders it as polygons (supports right now only very basic shapes, i.e. letters with one hole).

* Notes
** TODO Implement a 'scene2d' type class
- to plot a coordinate system in (and fit inside the viewport)
** WAITING triangulation of latex characters
Probe, at what complexity the p3d triangulation breaks. To decrease the complexity (geometry simplification) and check for intersections of hole polygon with boundary polygon, use the shapely library.

* Installation
- Clone this repository
- Create a =virtualenv= (e.g. named =venv=) with =python3=, (e.g. in your current folder =.=, the project's root folder): 
#+BEGIN_SRC sh
python3 -m venv .
#+END_SRC

- Activate the virtual environment, e.g.
#+BEGIN_SRC sh
source ./bin/activate
#+END_SRC

- install the dependencies listed in =requirements.txt=
#+BEGIN_SRC sh
pip install -r ./requirements.txt
#+END_SRC
